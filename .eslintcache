[{"C:\\Users\\koyrk\\useb-admin-site\\src\\index.js":"1","C:\\Users\\koyrk\\useb-admin-site\\src\\reportWebVitals.js":"2","C:\\Users\\koyrk\\useb-admin-site\\src\\App.jsx":"3","C:\\Users\\koyrk\\useb-admin-site\\src\\history\\index.js":"4","C:\\Users\\koyrk\\useb-admin-site\\src\\store\\index.js":"5","C:\\Users\\koyrk\\useb-admin-site\\src\\pages\\SendNotificationPage.jsx":"6","C:\\Users\\koyrk\\useb-admin-site\\src\\pages\\ViewLogPage.jsx":"7","C:\\Users\\koyrk\\useb-admin-site\\src\\components\\Header.jsx":"8","C:\\Users\\koyrk\\useb-admin-site\\src\\styles.js":"9","C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\index.js":"10","C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\notification.js":"11","C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\store.js":"12","C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\log.js":"13","C:\\Users\\koyrk\\useb-admin-site\\src\\components\\LogTable.jsx":"14","C:\\Users\\koyrk\\useb-admin-site\\src\\firebase.config.js":"15"},{"size":685,"mtime":1610946488383,"results":"16","hashOfConfig":"17"},{"size":364,"mtime":1610946488815,"results":"18","hashOfConfig":"17"},{"size":650,"mtime":1610946488130,"results":"19","hashOfConfig":"17"},{"size":114,"mtime":1610946488350,"results":"20","hashOfConfig":"17"},{"size":347,"mtime":1610946488840,"results":"21","hashOfConfig":"17"},{"size":5241,"mtime":1610965233629,"results":"22","hashOfConfig":"17"},{"size":2468,"mtime":1610946488792,"results":"23","hashOfConfig":"17"},{"size":2012,"mtime":1610946488250,"results":"24","hashOfConfig":"17"},{"size":3475,"mtime":1610946488999,"results":"25","hashOfConfig":"17"},{"size":267,"mtime":1610946488417,"results":"26","hashOfConfig":"17"},{"size":3115,"mtime":1610965087491,"results":"27","hashOfConfig":"17"},{"size":7315,"mtime":1610962567587,"results":"28","hashOfConfig":"17"},{"size":2317,"mtime":1610952907998,"results":"29","hashOfConfig":"17"},{"size":1452,"mtime":1610946488295,"results":"30","hashOfConfig":"17"},{"size":1183,"mtime":1611019956501,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1qwsuxj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\koyrk\\useb-admin-site\\src\\index.js",[],["65","66","67","68","69"],"C:\\Users\\koyrk\\useb-admin-site\\src\\reportWebVitals.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\App.jsx",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\history\\index.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\store\\index.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\pages\\SendNotificationPage.jsx",["70"],"/* eslint-disable react/jsx-key */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CommonInput, CommonButton } from '../styles';\r\nimport {\r\n  sendNotification,\r\n  sendNotificationWithImage\r\n} from '../modules/notification';\r\nimport {\r\n  getStoreTokenKey,\r\n  getAllTokenKey,\r\n  getStoreList\r\n  // createTokenKey\r\n} from '../modules/store';\r\n\r\nconst MainWrapper = styled.div`\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: 500,\r\n    marginBottom: 20\r\n  },\r\n  textarea: {\r\n    padding: '5px',\r\n    borderRadius: '2px',\r\n    color: 'rgb(50, 50, 50)',\r\n    fontSize: '14px',\r\n    outline: 'none !important',\r\n    width: '100%',\r\n    height: 'auto',\r\n    boxSizing: 'border-box',\r\n    border: 'none',\r\n    margin: '4px 0',\r\n    background: '#fff',\r\n    cursor: 'auto',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    fontFamily: 'Noto Sans KR, sans-serif'\r\n  }\r\n}));\r\n\r\nconst SendNotificationPage = () => {\r\n  const classes = useStyles();\r\n  const [imageInfo, setImageInfo] = useState({ imageUrl: '' });\r\n  const [notiInfo, setNotiInfo] = useState({ title: '', message: '' });\r\n  const [storeName, setStoreName] = useState('');\r\n  const selectedTokenKey = useSelector(\r\n    (state) => state.storeReducer.selectedTokenKey\r\n  );\r\n  const storeList = useSelector((state) => state.storeReducer.storeList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getStoreList());\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNotiInfo((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleImageUrlChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setImageInfo((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleStoreChange = (event, value) => {\r\n    setStoreName(value);\r\n  };\r\n\r\n  const onClickSubmit = () => {\r\n    // console.log(storeName);\r\n    if (storeName === '전체') {\r\n      dispatch(getAllTokenKey());\r\n      // console.log(selectedTokenKey);\r\n      sendNotification(selectedTokenKey, notiInfo);\r\n    } else {\r\n      // dispatch(\r\n      //   createTokenKey(\r\n      //     'abcd',\r\n      //     'fJp7byCjQdyD9VE7cSKMCx:APA91bGliXs52hGLGIbkwianlNcWTuUbhIEEmfBaSAAYIt6iSImq2BCh3EpA-ts-NEuzCO003MOy8AKkmYMrGjOsHixwxtlj2npSBrVaHdvqoFW-Nanrgu0eg_VHSM9r4j7iZzP57TvQ'\r\n      //   )\r\n      // );\r\n      dispatch(getStoreTokenKey(storeName));\r\n      console.log(selectedTokenKey);\r\n      dispatch(\r\n        sendNotification(\r\n          'fJp7byCjQdyD9VE7cSKMCx:APA91bGliXs52hGLGIbkwianlNcWTuUbhIEEmfBaSAAYIt6iSImq2BCh3EpA-ts-NEuzCO003MOy8AKkmYMrGjOsHixwxtlj2npSBrVaHdvqoFW-Nanrgu0eg_VHSM9r4j7iZzP57TvQ',\r\n          notiInfo\r\n        )\r\n      );\r\n    }\r\n    setNotiInfo({ title: '', message: '' });\r\n  };\r\n\r\n  const onClickSubmitWithImage = () => {\r\n    if (storeName === '전체') {\r\n      dispatch(\r\n        sendNotificationWithImage(selectedTokenKey, imageInfo, notiInfo)\r\n      );\r\n    } else {\r\n      dispatch(\r\n        sendNotificationWithImage(selectedTokenKey, imageInfo, notiInfo)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <h1> Send Notification </h1>\r\n      <div className={classes.root}>\r\n        <Autocomplete\r\n          onInputChange={handleStoreChange}\r\n          noOptionsText=\"검색 결과 없음\"\r\n          id=\"select-store\"\r\n          size=\"small\"\r\n          options={storeList}\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionSelected={(option, value) => value.name === option.name}\r\n          defaultValue={{ name: '전체' }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"standard\"\r\n              label=\"Store\"\r\n              placeholder=\"\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <CommonInput\r\n        id=\"title-input\"\r\n        name=\"title\"\r\n        value={notiInfo.title}\r\n        placeholder=\"Title\"\r\n        onChange={handleChange}\r\n      />\r\n      <CommonInput\r\n        id=\"message-input\"\r\n        name=\"message\"\r\n        value={notiInfo.message}\r\n        placeholder=\"Message\"\r\n        onChange={handleChange}\r\n      />\r\n      <CommonButton\r\n        id=\"submit-button\"\r\n        disabled={notiInfo.title === '' || notiInfo.message === ''}\r\n        margin=\"20px 0\"\r\n        onClick={onClickSubmit}\r\n      >\r\n        Send\r\n      </CommonButton>\r\n      <CommonInput\r\n        id=\"image-url-input\"\r\n        name=\"imageUrl\"\r\n        value={imageInfo.imageUrl}\r\n        placeholder=\"Image Url (https://...jpg)\"\r\n        onChange={handleImageUrlChange}\r\n      />\r\n      <CommonButton\r\n        id=\"submit-button\"\r\n        disabled={notiInfo.title === '' || notiInfo.message === ''}\r\n        margin=\"20px 0\"\r\n        onClick={onClickSubmitWithImage}\r\n      >\r\n        Send with Image\r\n      </CommonButton>\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default SendNotificationPage;\r\n","C:\\Users\\koyrk\\useb-admin-site\\src\\pages\\ViewLogPage.jsx",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\components\\Header.jsx",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\styles.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\index.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\notification.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\store.js",["71"],"// eslint-disable-next-line no-unused-vars\r\nimport firebase from 'firebase/app';\r\nimport axios from 'axios';\r\nimport 'firebase/database';\r\nimport { FirebaseConfig, FCMServerKey } from '../firebase.config';\r\n\r\nexport const REGISTER_TOKEN_KEY_REQUEST = 'store/REGISTER_TOKEN_KEY_REQUEST';\r\nexport const REGISTER_TOKEN_KEY_SUCCESS = 'store/REGISTER_TOKEN_KEY_SUCCESS';\r\nexport const REGISTER_TOKEN_KEY_FAILURE = 'store/REGISTER_TOKEN_KEY_FAILURE';\r\n\r\nexport const ADD_TOKEN_KEY_REQUEST = 'store/ADD_TOKEN_KEY_REQUEST';\r\nexport const ADD_TOKEN_KEY_SUCCESS = 'store/ADD_TOKEN_KEY_SUCCESS';\r\nexport const ADD_TOKEN_KEY_FAILURE = 'store/ADD_TOKEN_KEY_FAILURE';\r\n\r\nexport const GET_STORE_LIST_REQUEST = 'store/GET_STORE_LIST_REQUEST';\r\nexport const GET_STORE_LIST_SUCCESS = 'store/GET_STORE_LIST_SUCCESS';\r\nexport const GET_STORE_LIST_FAILURE = 'store/GET_STORE_LIST_FAILURE';\r\n\r\nexport const GET_STORE_TOKEN_KEY_REQUEST = 'store/GET_STORE_TOKEN_KEY_REQUEST';\r\nexport const GET_STORE_TOKEN_KEY_SUCCESS = 'store/GET_STORE_TOKEN_KEY_SUCCESS';\r\nexport const GET_STORE_TOKEN_KEY_FAILURE = 'store/GET_STORE_TOKEN_KEY_FAILURE';\r\n\r\nexport const GET_ALL_TOKEN_KEY_REQUEST = 'store/GET_ALL_TOKEN_KEY_REQUEST';\r\nexport const GET_ALL_TOKEN_KEY_SUCCESS = 'store/GET_ALL_TOKEN_KEY_SUCCESS';\r\nexport const GET_ALL_TOKEN_KEY_FAILURE = 'store/GET_ALL_TOKEN_KEY_FAILURE';\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(FirebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst initialState = {\r\n  storeList: [],\r\n  selectedTokenKey: []\r\n};\r\n\r\n// Register Token Key (At First Time)\r\nexport const createTokenKey = (keyName, registerToken) => async (dispatch) => {\r\n  dispatch({ type: 'store/CREATE_TOKEN_KEY_REQUEST' });\r\n  let result;\r\n  try {\r\n    result = await axios.post(\r\n      `https://fcm.googleapis.com/fcm/notification`,\r\n      {\r\n        operation: 'create',\r\n        notification_key_name: `${keyName}`,\r\n        registration_ids: [registerToken]\r\n      },\r\n      {\r\n        headers: {\r\n          // eslint-disable-next-line prettier/prettier\r\n          'Authorization': `key=${FCMServerKey}`,\r\n          'Content-Type': 'application/json',\r\n          // eslint-disable-next-line prettier/prettier\r\n          'project_id': '543138816699'\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/CREATE_TOKEN_KEY_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/CREATE_TOKEN_KEY_SUCCESS',\r\n    result: result?.data\r\n  });\r\n};\r\n\r\n// Add Token Key\r\nexport const addTokenKey = (keyName, keyValue, registerToken) => async (\r\n  dispatch\r\n) => {\r\n  dispatch({ type: 'store/ADD_TOKEN_KEY_REQUEST' });\r\n  let result;\r\n  try {\r\n    result = await axios.post(\r\n      `https://fcm.googleapis.com/fcm/notification`,\r\n      {\r\n        operation: 'add',\r\n        notification_key_name: `${keyName}`, // not necessary, but for SAFETY\r\n        notification_key_: `${keyValue}`,\r\n        registration_ids: [registerToken]\r\n      },\r\n      {\r\n        headers: {\r\n          // eslint-disable-next-line prettier/prettier\r\n          'Authorization': `key=${FCMServerKey}`,\r\n          'Content-Type': 'application/json',\r\n          // eslint-disable-next-line prettier/prettier\r\n          'project_id': '543138816699'\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/ADD_TOKEN_KEY_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/ADD_TOKEN_KEY_SUCCESS',\r\n    result: result?.data\r\n  });\r\n};\r\n\r\n// Remove Token Key\r\nexport const removeTokenKey = (keyName, keyValue, registerToken) => async (\r\n  dispatch\r\n) => {\r\n  dispatch({ type: 'store/REMOVE_TOKEN_KEY_REQUEST' });\r\n  let result;\r\n  try {\r\n    result = await axios.post(\r\n      `https://fcm.googleapis.com/fcm/notification`,\r\n      {\r\n        operation: 'remove',\r\n        notification_key_name: `${keyName}`, // not necessary, but for SAFETY\r\n        notification_key_: `${keyValue}`,\r\n        registration_ids: [registerToken]\r\n      },\r\n      {\r\n        headers: {\r\n          // eslint-disable-next-line prettier/prettier\r\n          'Authorization': `key=${FCMServerKey}`,\r\n          'Content-Type': 'application/json',\r\n          // eslint-disable-next-line prettier/prettier\r\n          'project_id': '543138816699'\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/REMOVE_TOKEN_KEY_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/REMOVE_TOKEN_KEY_SUCCESS',\r\n    result: result?.data\r\n  });\r\n};\r\n\r\nexport const getStoreTokenKey = (storeName) => async (dispatch) => {\r\n  dispatch({ type: 'store/GET_STORE_TOKEN_KEY_REQUEST' });\r\n  let result;\r\n  try {\r\n    // getting notification key\r\n    result = await axios.get(\r\n      `https://fcm.googleapis.com/fcm/notification?notification_key_name=${storeName}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          // eslint-disable-next-line prettier/prettier\r\n          'Authorization': `key=${FCMServerKey}`,\r\n          'Content-Type': 'application/json',\r\n          // eslint-disable-next-line prettier/prettier\r\n          'project_id': '543138816699'\r\n        }\r\n      }\r\n    );\r\n    // console.log(result.data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/GET_STORE_TOKEN_KEY_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/GET_STORE_TOKEN_KEY_SUCCESS',\r\n    result: result?.data\r\n    // selectedTokenKey :\r\n  });\r\n};\r\n\r\nexport const getAllTokenKey = () => async (dispatch) => {\r\n  dispatch({ type: 'store/GET_ALL_TOKEN_KEY_REQUEST' });\r\n  let result;\r\n  try {\r\n    result = await axios.get(\r\n      'https://fcm.googleapis.com/fcm/notification?notification_key_name=All',\r\n      {\r\n        headers: {\r\n          // eslint-disable-next-line prettier/prettier\r\n          'Authorization': `key=${FCMServerKey}`,\r\n          'Content-Type': 'application/json',\r\n          // eslint-disable-next-line prettier/prettier\r\n          'project_id': '543138816699'\r\n        }\r\n      }\r\n    );\r\n    console.log(result.data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/GET_ALL_TOKEN_KEY_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/GET_ALL_TOKEN_KEY_SUCCESS',\r\n    result: result?.data\r\n    // selectedTokenKey :\r\n  });\r\n};\r\n\r\nexport const getStoreList = () => async (dispatch) => {\r\n  dispatch({ type: 'store/GET_STORE_LIST_REQUEST' });\r\n  let result;\r\n  const tempStoreList = [{ name: '전체' }];\r\n  try {\r\n    result = await axios.get(\r\n      `https://realpass-a7db8-default-rtdb.firebaseio.com/stores.json`\r\n    );\r\n    Object.keys(result.data).forEach((store) =>\r\n      tempStoreList.push({ name: store })\r\n    );\r\n    // console.log(tempStoreList);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'store/GET_STORE_LIST_FAILURE',\r\n      error\r\n    });\r\n    return;\r\n  }\r\n  dispatch({\r\n    type: 'store/GET_STORE_LIST_SUCCESS',\r\n    result: result?.data,\r\n    storeList: tempStoreList\r\n  });\r\n};\r\n\r\nexport default function storeReducer(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState;\r\n  }\r\n  switch (action.type) {\r\n    case GET_STORE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        storeList: action.storeList\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\koyrk\\useb-admin-site\\src\\modules\\log.js",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\components\\LogTable.jsx",[],"C:\\Users\\koyrk\\useb-admin-site\\src\\firebase.config.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":94,"column":7,"nodeType":"84","messageId":"85","endLine":94,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":198,"column":5,"nodeType":"84","messageId":"85","endLine":198,"endColumn":16},"lines-around-directive",["86"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]